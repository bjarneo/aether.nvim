-- Diffview.nvim highlights for Aether colorscheme
local M = {}

-- Import shared utility functions
local utils = require("aether.utils")
local hi = utils.hi

function M.setup(colors)
	local config = require("aether").config or {}
	local italic = config.disable_italics and "NONE" or "italic"

	-- Diffview panel
	hi("DiffviewNormal", { fg = colors.base05 })
	hi("DiffviewCursorLine", { bg = colors.subtle_bg })
	hi("DiffviewVertSplit", { fg = colors.base03 })
	hi("DiffviewStatusLine", { fg = colors.base05, bg = colors.subtle_bg })
	hi("DiffviewStatusLineNC", { fg = colors.base03, bg = colors.subtle_bg })
	hi("DiffviewFilePanelTitle", { fg = colors.base08, style = "bold" })
	hi("DiffviewFilePanelCounter", { fg = colors.base0C, style = "bold" })
	hi("DiffviewFilePanelFileName", { fg = colors.base0B })
	hi("DiffviewFilePanelPath", { fg = colors.base03 })
	hi("DiffviewFilePanelInsertions", { fg = colors.base0B })
	hi("DiffviewFilePanelDeletions", { fg = colors.base08 })
	hi("DiffviewFilePanelRootPath", { fg = colors.base0A, style = "bold" })
	hi("DiffviewFilePanelSelected", { fg = colors.base08, style = "bold" })
	hi("DiffviewFilePanelConflicts", { fg = colors.base08 })
	hi("DiffviewReference", { fg = colors.base0C })
	hi("DiffviewPrimary", { fg = colors.base08 })
	hi("DiffviewSecondary", { fg = colors.base0C })
	hi("DiffviewDim1", { fg = colors.base03 })
	hi("DiffviewFolderName", { fg = colors.base0A })
	hi("DiffviewFolderSign", { fg = colors.base03 })
	hi("DiffviewHash", { fg = colors.base03 })
	hi("DiffviewStatusAdded", { fg = colors.base0B })
	hi("DiffviewStatusUntracked", { fg = colors.base0B })
	hi("DiffviewStatusModified", { fg = colors.base0A })
	hi("DiffviewStatusRenamed", { fg = colors.base0A })
	hi("DiffviewStatusCopied", { fg = colors.base0D })
	hi("DiffviewStatusTypeChange", { fg = colors.base0A })
	hi("DiffviewStatusUnmerged", { fg = colors.base08 })
	hi("DiffviewStatusUnknown", { fg = colors.base03 })
	hi("DiffviewStatusDeleted", { fg = colors.base08 })
	hi("DiffviewStatusBroken", { fg = colors.base08 })
	hi("DiffviewStatusIgnored", { fg = colors.base03 })
	hi("DiffviewFilePanelStaged", { fg = colors.base0D })
	hi("DiffviewFilePanelUnstaged", { fg = colors.base0A })
	hi("DiffviewFilePanelWorking", { fg = colors.base05 })
	hi("DiffviewFilePanelIndex", { fg = colors.base0D })
	hi("DiffviewFilePanelMerging", { fg = colors.base08 })
	hi("DiffviewFilePanelCommit", { fg = colors.base08 })
	hi("DiffviewFilePanelBranch", { fg = colors.base0C })
	hi("DiffviewFilePanelHead", { fg = colors.base08, style = "bold" })
	hi("DiffviewFilePanelUpstream", { fg = colors.base0A })
	hi("DiffviewFilePanelReadOnly", { fg = colors.base03 })
	hi("DiffviewFilePanelLoadMore", { fg = colors.base0D })
	hi("DiffviewFilePanelLoading", { fg = colors.base0A })
	hi("DiffviewFilePanelEmpty", { fg = colors.base03 })
	hi("DiffviewFilePanelEmptyFolder", { fg = colors.base03 })
	hi("DiffviewFilePanelEmptyMessage", { fg = colors.base03, style = italic })
	hi("DiffviewFilePanelBinary", { fg = colors.base03 })
	hi("DiffviewFilePanelSymlink", { fg = colors.base0D })
	hi("DiffviewFilePanelSubmodule", { fg = colors.base0A })
	hi("DiffviewFilePanelIgnored", { fg = colors.base03 })
	hi("DiffviewFilePanelClean", { fg = colors.base0D })
	hi("DiffviewFilePanelDirty", { fg = colors.base0A })
	hi("DiffviewFilePanelUnknown", { fg = colors.base03 })
	hi("DiffviewFilePanelError", { fg = colors.base08 })
	hi("DiffviewFilePanelWarning", { fg = colors.base0A })
	hi("DiffviewFilePanelInfo", { fg = colors.base0D })
	hi("DiffviewFilePanelHint", { fg = colors.base0C })
	hi("DiffviewFilePanelOk", { fg = colors.base0D })
	hi("DiffviewFilePanelMoved", { fg = colors.base0C })
	hi("DiffviewFilePanelMoved2", { fg = colors.base0A })
	hi("DiffviewFilePanelMoved3", { fg = colors.base0A })
	hi("DiffviewFilePanelMoved4", { fg = colors.base08 })
	hi("DiffviewFilePanelMoved5", { fg = colors.base0D })
	hi("DiffviewFilePanelMoved6", { fg = colors.base08 })
	hi("DiffviewFilePanelMoved7", { fg = colors.base0D })
	hi("DiffviewFilePanelMoved8", { fg = colors.base0B })
	hi("DiffviewFilePanelMoved9", { fg = colors.base0C })
	hi("DiffviewFilePanelMoved10", { fg = colors.base0A })
end

return M
