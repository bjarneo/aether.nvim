-- Conform.nvim highlights for Aether colorscheme
local M = {}

-- Import shared utility functions
local utils = require("aether.utils")
local hi = utils.hi

function M.setup(colors)
	-- Conform formatting
	hi("ConformFormat", { fg = colors.base0D })
	hi("ConformFormatSuccess", { fg = colors.base0D })
	hi("ConformFormatError", { fg = colors.base08 })
	hi("ConformFormatWarning", { fg = colors.base0A })
	hi("ConformFormatInfo", { fg = colors.base0D })
	hi("ConformFormatHint", { fg = colors.base0C })
	hi("ConformFormatProgress", { fg = colors.base08 })
	hi("ConformFormatDone", { fg = colors.base0D })
	hi("ConformFormatPending", { fg = colors.base0A })
	hi("ConformFormatRunning", { fg = colors.base08 })
	hi("ConformFormatCancelled", { fg = colors.base03 })
	hi("ConformFormatTimeout", { fg = colors.base08 })
	hi("ConformFormatSkipped", { fg = colors.base03 })
	hi("ConformFormatDisabled", { fg = colors.base03 })
	hi("ConformFormatEnabled", { fg = colors.base0D })
	hi("ConformFormatActive", { fg = colors.base08, style = "bold" })
	hi("ConformFormatInactive", { fg = colors.base03 })
	hi("ConformFormatAvailable", { fg = colors.base0D })
	hi("ConformFormatUnavailable", { fg = colors.base08 })
	hi("ConformFormatNotFound", { fg = colors.base08 })
	hi("ConformFormatInstalled", { fg = colors.base0D })
	hi("ConformFormatNotInstalled", { fg = colors.base08 })
	hi("ConformFormatSupported", { fg = colors.base0D })
	hi("ConformFormatUnsupported", { fg = colors.base08 })
	hi("ConformFormatExecutable", { fg = colors.base0D })
	hi("ConformFormatNotExecutable", { fg = colors.base08 })
	hi("ConformFormatValid", { fg = colors.base0D })
	hi("ConformFormatInvalid", { fg = colors.base08 })
	hi("ConformFormatReady", { fg = colors.base0D })
	hi("ConformFormatNotReady", { fg = colors.base0A })
	hi("ConformFormatLoading", { fg = colors.base08 })
	hi("ConformFormatLoaded", { fg = colors.base0D })
	hi("ConformFormatUnloaded", { fg = colors.base03 })
	hi("ConformFormatStarting", { fg = colors.base08 })
	hi("ConformFormatStarted", { fg = colors.base0D })
	hi("ConformFormatStopping", { fg = colors.base0A })
	hi("ConformFormatStopped", { fg = colors.base03 })
	hi("ConformFormatRestarting", { fg = colors.base0A })
	hi("ConformFormatRestarted", { fg = colors.base0D })
	hi("ConformFormatUpdating", { fg = colors.base08 })
	hi("ConformFormatUpdated", { fg = colors.base0D })
	hi("ConformFormatInstalling", { fg = colors.base08 })
	hi("ConformFormatUninstalling", { fg = colors.base0A })
	hi("ConformFormatUninstalled", { fg = colors.base03 })
	hi("ConformFormatConfiguring", { fg = colors.base08 })
	hi("ConformFormatConfigured", { fg = colors.base0D })
	hi("ConformFormatUnconfigured", { fg = colors.base03 })
	hi("ConformFormatDefault", { fg = colors.base05 })
	hi("ConformFormatCustom", { fg = colors.base0C })
	hi("ConformFormatBuiltin", { fg = colors.base08 })
	hi("ConformFormatExternal", { fg = colors.base0A })
	hi("ConformFormatLocal", { fg = colors.base0B })
	hi("ConformFormatGlobal", { fg = colors.base0D })
	hi("ConformFormatProject", { fg = colors.base0C })
	hi("ConformFormatSystem", { fg = colors.base0A })
	hi("ConformFormatUser", { fg = colors.base05 })
	hi("ConformFormatAuto", { fg = colors.base08 })
	hi("ConformFormatManual", { fg = colors.base0D })
	hi("ConformFormatOnSave", { fg = colors.base0D })
	hi("ConformFormatOnWrite", { fg = colors.base0D })
	hi("ConformFormatOnChange", { fg = colors.base0A })
	hi("ConformFormatOnInsert", { fg = colors.base0A })
	hi("ConformFormatOnCommand", { fg = colors.base0D })
	hi("ConformFormatOnKey", { fg = colors.base0D })
	hi("ConformFormatOnEvent", { fg = colors.base0C })
	hi("ConformFormatOnTimer", { fg = colors.base08 })
	hi("ConformFormatOnRequest", { fg = colors.base0D })
	hi("ConformFormatOnDemand", { fg = colors.base0D })
	hi("ConformFormatOnLoad", { fg = colors.base0D })
	hi("ConformFormatOnUnload", { fg = colors.base03 })
	hi("ConformFormatOnExit", { fg = colors.base03 })
	hi("ConformFormatOnStart", { fg = colors.base0D })
	hi("ConformFormatOnStop", { fg = colors.base03 })
	hi("ConformFormatOnRestart", { fg = colors.base0A })
	hi("ConformFormatOnUpdate", { fg = colors.base08 })
	hi("ConformFormatOnInstall", { fg = colors.base08 })
	hi("ConformFormatOnUninstall", { fg = colors.base0A })
	hi("ConformFormatOnConfigure", { fg = colors.base08 })
	hi("ConformFormatOnUnconfigure", { fg = colors.base03 })
end

return M
